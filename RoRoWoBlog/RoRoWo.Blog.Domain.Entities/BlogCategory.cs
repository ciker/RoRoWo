//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace RoRoWo.Blog.Domain.Entities
{
    public partial class BlogCategory
    {
        #region Primitive Properties
    
        public virtual int CateID
        {
            get;
            set;
        }
    
        public virtual string CateName
        {
            get;
            set;
        }
    
        public virtual int ParentID
        {
            get;
            set;
        }
    
        public virtual int State
        {
            get;
            set;
        }
    
        public virtual int SortID
        {
            get;
            set;
        }
    
        public virtual int ArticleCount
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreateTime
        {
            get;
            set;
        }
    
        public virtual string Note
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<BlogArticle> BlogArticle
        {
            get
            {
                if (_blogArticle == null)
                {
                    var newCollection = new FixupCollection<BlogArticle>();
                    newCollection.CollectionChanged += FixupBlogArticle;
                    _blogArticle = newCollection;
                }
                return _blogArticle;
            }
            set
            {
                if (!ReferenceEquals(_blogArticle, value))
                {
                    var previousValue = _blogArticle as FixupCollection<BlogArticle>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBlogArticle;
                    }
                    _blogArticle = value;
                    var newValue = value as FixupCollection<BlogArticle>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBlogArticle;
                    }
                }
            }
        }
        private ICollection<BlogArticle> _blogArticle;

        #endregion
        #region Association Fixup
    
        private void FixupBlogArticle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (BlogArticle item in e.NewItems)
                {
                    item.BlogCategory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BlogArticle item in e.OldItems)
                {
                    if (ReferenceEquals(item.BlogCategory, this))
                    {
                        item.BlogCategory = null;
                    }
                }
            }
        }

        #endregion
    }
}
