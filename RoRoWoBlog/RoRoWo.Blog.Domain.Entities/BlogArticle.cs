//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace RoRoWo.Blog.Domain.Entities
{
    
    public partial class BlogArticle
    {
        #region Primitive Properties
    
        public virtual int ArticleID
        {
            get;
            set;
        }
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual string Content
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual string ImageUrl
        {
            get;
            set;
        }
    
        public virtual string Tag
        {
            get;
            set;
        }
    
        public virtual int Hits
        {
            get;
            set;
        }
    
        public virtual bool IsTop
        {
            get;
            set;
        }
    
        public virtual int State
        {
            get;
            set;
        }
    
        public virtual Nullable<int> UserID
        {
            get;
            set;
        }
    
        public virtual string UserName
        {
            get;
            set;
        }
    
        public virtual string UserIP
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreateTime
        {
            get;
            set;
        }
    
        public virtual System.DateTime PublishTime
        {
            get;
            set;
        }
    
        public virtual System.DateTime UpdateTime
        {
            get;
            set;
        }
    
        public virtual string Note
        {
            get;
            set;
        }
    
        public virtual int BlogCategory_CateID
        {
            get { return _blogCategory_CateID; }
            set
            {
                if (_blogCategory_CateID != value)
                {
                    if (BlogCategory != null && BlogCategory.CateID != value)
                    {
                        BlogCategory = null;
                    }
                    _blogCategory_CateID = value;
                }
            }
        }
        private int _blogCategory_CateID;

        #endregion
        #region Navigation Properties
    
        public virtual BlogCategory BlogCategory
        {
            get { return _blogCategory; }
            set
            {
                if (!ReferenceEquals(_blogCategory, value))
                {
                    var previousValue = _blogCategory;
                    _blogCategory = value;
                    FixupBlogCategory(previousValue);
                }
            }
        }
        private BlogCategory _blogCategory;
    
        public virtual ICollection<BlogComment> BlogComment
        {
            get
            {
                if (_blogComment == null)
                {
                    var newCollection = new FixupCollection<BlogComment>();
                    newCollection.CollectionChanged += FixupBlogComment;
                    _blogComment = newCollection;
                }
                return _blogComment;
            }
            set
            {
                if (!ReferenceEquals(_blogComment, value))
                {
                    var previousValue = _blogComment as FixupCollection<BlogComment>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBlogComment;
                    }
                    _blogComment = value;
                    var newValue = value as FixupCollection<BlogComment>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBlogComment;
                    }
                }
            }
        }
        private ICollection<BlogComment> _blogComment;
    
        public virtual ICollection<BlogDigg> BlogDigg
        {
            get
            {
                if (_blogDigg == null)
                {
                    var newCollection = new FixupCollection<BlogDigg>();
                    newCollection.CollectionChanged += FixupBlogDigg;
                    _blogDigg = newCollection;
                }
                return _blogDigg;
            }
            set
            {
                if (!ReferenceEquals(_blogDigg, value))
                {
                    var previousValue = _blogDigg as FixupCollection<BlogDigg>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBlogDigg;
                    }
                    _blogDigg = value;
                    var newValue = value as FixupCollection<BlogDigg>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBlogDigg;
                    }
                }
            }
        }
        private ICollection<BlogDigg> _blogDigg;

        #endregion
        #region Association Fixup
    
        private void FixupBlogCategory(BlogCategory previousValue)
        {
            if (previousValue != null && previousValue.BlogArticle.Contains(this))
            {
                previousValue.BlogArticle.Remove(this);
            }
    
            if (BlogCategory != null)
            {
                if (!BlogCategory.BlogArticle.Contains(this))
                {
                    BlogCategory.BlogArticle.Add(this);
                }
                if (BlogCategory_CateID != BlogCategory.CateID)
                {
                    BlogCategory_CateID = BlogCategory.CateID;
                }
            }
        }
    
        private void FixupBlogComment(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (BlogComment item in e.NewItems)
                {
                    item.BlogArticle = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BlogComment item in e.OldItems)
                {
                    if (ReferenceEquals(item.BlogArticle, this))
                    {
                        item.BlogArticle = null;
                    }
                }
            }
        }
    
        private void FixupBlogDigg(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (BlogDigg item in e.NewItems)
                {
                    item.BlogArticle = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BlogDigg item in e.OldItems)
                {
                    if (ReferenceEquals(item.BlogArticle, this))
                    {
                        item.BlogArticle = null;
                    }
                }
            }
        }

        #endregion
    }
}
